From: "Barak A. Pearlmutter" <barak+git@cs.nuim.ie>
Date: Mon, 24 Jun 2013 23:44:43 +0100
Subject: spelling

correct "seperately" to "separately"
---
 doc/mhash.3             | 4 ++--
 doc/mhash.pod           | 4 ++--
 include/mutils/mutils.h | 2 +-
 3 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/doc/mhash.3 b/doc/mhash.3
index 79fdbf6..8b20a35 100644
--- a/doc/mhash.3
+++ b/doc/mhash.3
@@ -281,7 +281,7 @@ in bytes. Otherwise, it returns 0.
 .IP "char *\fBmhash_get_hash_name\fR(hashid \fItype\fR);" 4
 .IX Item "char *mhash_get_hash_name(hashid type);"
 If \fItype\fR exists, this returns the name of the hash \fItype\fR. Otherwise, a
-\&\f(CW\*(C`NULL\*(C'\fR pointer is returned. The string is allocated with \fImalloc\fR\|(3) seperately,
+\&\f(CW\*(C`NULL\*(C'\fR pointer is returned. The string is allocated with \fImalloc\fR\|(3) separately,
 so do not forget to \fIfree\fR\|(3) it.
 .IP "const char *\fBmhash_get_hash_name_static\fR(hashid \fItype\fR);" 4
 .IX Item "const char *mhash_get_hash_name_static(hashid type);"
@@ -414,7 +414,7 @@ Algorithms are numbered from 0 to \f(CW\*(C`mhash_keygen_count()\*(C'\fR.
 .IP "char *\fBmhash_get_keygen_name\fR(keygenid \fItype\fR);" 4
 .IX Item "char *mhash_get_keygen_name(keygenid type);"
 If \fItype\fR exists, this returns the name of the keygen \fItype\fR. Otherwise, a
-\&\f(CW\*(C`NULL\*(C'\fR pointer is returned. The string is allocated with \fImalloc\fR\|(3) seperately,
+\&\f(CW\*(C`NULL\*(C'\fR pointer is returned. The string is allocated with \fImalloc\fR\|(3) separately,
 so do not forget to \fIfree\fR\|(3) it.
 .IP "const char *\fBmhash_get_keygen_name_static\fR(keygenid \fItype\fR);" 4
 .IX Item "const char *mhash_get_keygen_name_static(keygenid type);"
diff --git a/doc/mhash.pod b/doc/mhash.pod
index 6660c38..899ea12 100644
--- a/doc/mhash.pod
+++ b/doc/mhash.pod
@@ -146,7 +146,7 @@ in bytes. Otherwise, it returns 0.
 =item char *B<mhash_get_hash_name>(hashid I<type>);
 
 If I<type> exists, this returns the name of the hash I<type>. Otherwise, a
-C<NULL> pointer is returned. The string is allocated with malloc(3) seperately,
+C<NULL> pointer is returned. The string is allocated with malloc(3) separately,
 so do not forget to free(3) it.
 
 =item const char *B<mhash_get_hash_name_static>(hashid I<type>);
@@ -303,7 +303,7 @@ Algorithms are numbered from 0 to C<mhash_keygen_count()>.
 =item char *B<mhash_get_keygen_name>(keygenid I<type>);
 
 If I<type> exists, this returns the name of the keygen I<type>. Otherwise, a
-C<NULL> pointer is returned. The string is allocated with malloc(3) seperately,
+C<NULL> pointer is returned. The string is allocated with malloc(3) separately,
 so do not forget to free(3) it.
 
 =item const char *B<mhash_get_keygen_name_static>(keygenid I<type>);
diff --git a/include/mutils/mutils.h b/include/mutils/mutils.h
index 2712a33..2b3872e 100644
--- a/include/mutils/mutils.h
+++ b/include/mutils/mutils.h
@@ -87,7 +87,7 @@ typedef unsigned char mutils_word8;
 
 /*
  * Due to buggy implementations of the boolean headers in some systems,
- * we have to detect the boolean values seperately from the boolean type.
+ * we have to detect the boolean values separately from the boolean type.
  * A big thank you to Heiko Lehmann for spotting the bug. Unfortunately,
  * this fix may not be enough, as it is only going to work on things the
  * precompiler knows about.
